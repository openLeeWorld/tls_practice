#define CATCH_CONFIG_MAIN
#include <catch2/catch_test_macros.hpp>
#include "elliptic_curve.h"

using namespace std;

TEST_CASE("secp256k1") { // 테스트(이름, 태그)
    mpz_class test_vector[] = {
        1, // 1, (1G).x, (1G).y
        0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798_mpz,
        0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8_mpz,
        2, // 2, (2G).x, (2G).y
        0xC6047F9441ED7D6D3045406E95C07CD85C778E4B8CEF3CA7ABAC09B95C709EE5_mpz,
        0x1AE168FEA63DC339A3C58419466CEAEE9E6D41D0BBA34949D61B18A9362EFA47_mpz,
        3, // 3, (3G).x, (3G).y
        0xF9308A019258C3105106AC6A829A1D5BF38813015347C0DF6B0E1F0AAB8A19E2_mpz,
        0x38819F7C8BB220B8A27A9B606C22A14DFBE8DDB4F24BBDC56A8D9C36C0AA1324_mpz
    }; // 바른 값으로 고쳐야함

    EC_Field secp256k1{0, 7, 
    0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFEFFFFFC2F_mpz};
    
    EC_Point G{
        0x79BE667EF9DCBBAC55A06295CE870B07029BFCDB2DCE28D959F2815B16F81798_mpz,
        0x483ADA7726A3C4655DA4FBFC0E1108A8FD17B448A68554199C47D08FFB10D4B8_mpz,
        secp256k1
    };

    for(int i=0; i < 9; i+=3) {
        auto P = test_vector[i] * G;
        REQUIRE(P.x == test_vector[i+1]);
        REQUIRE(P.y == test_vector[i+2]);
    }
}
